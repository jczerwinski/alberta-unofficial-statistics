{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["IndexPage","render","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","href","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","Component","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","react_default","style","marginBottom","margin","maxWidth","padding","fontFamily","fontWeight","gatsby_browser_entry","textDecoration","color","Layout","Fragment","component_default","target","position","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-49437662add5ca794925.js","sourcesContent":["import './index.css'\r\n\r\nimport React, {Component} from 'react'\r\n\r\nimport { Link } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\n\r\nclass IndexPage extends Component {\r\n  render () {\r\n    return (<Layout>\r\n      <SEO title=\"Home\" />\r\n      <p>This site is designed to imagine what the <a href=\"https://www.alberta.ca/office-statistics-information.aspx\">Government of Alberta's Office of Statistics and Information's</a> <a href=\"https://open.alberta.ca/dataset?topic=Economy+and+Finance&tags=Alberta+Official+Statistics\">Alberta Official Statistics</a> data visualizations <strong><em>could be</em></strong>.</p>\r\n      <p>It is developed primarily using Gatsby, React, and D3.js, and is deployed on Github Pages.</p>\r\n      <p>You can find the <a href=\"https://github.com/jczerwinski/alberta-unofficial-statistics\">source code</a> on GitHub.</p>\r\n      <h2><Link to=\"/cpi\">Consumer Price Index</Link></h2>\r\n      <p>Interactive visualization of Alberta and Canada's year-over-year percent change in the Consumer Price Index. Use a slider to dynamically change the period.</p>\r\n      <h2><Link to=\"/population-pyramid\">Population Pyramid</Link></h2>\r\n      <p>Interactive Alberta population pyramid. Use a slider to dynamically change the year.</p>\r\n    </Layout>);\r\n  }\r\n}\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <div\r\n    style={{\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0, fontFamily: 'Arial', fontWeight: 100 }}><Link style={{textDecoration: 'none', color: 'inherit'}} to=\"/\">\r\n          Alberta <span style={{color: '#ff7900'}}>un-</span><span style={{color: '#00aad2'}}>Official Statistics</span></Link>\r\n      </h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport GitHubForkRibbon from 'react-github-fork-ribbon'\r\n\r\nimport Header from './header'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <GitHubForkRibbon href=\"//www.github.com/jczerwinski/alberta-unofficial-statistics\"\r\n          color=\"black\"\r\n          target=\"_blank\"\r\n          position=\"right\">\r\n          Fork me on GitHub\r\n        </GitHubForkRibbon>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          {children}\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}
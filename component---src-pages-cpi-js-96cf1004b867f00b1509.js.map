{"version":3,"sources":["webpack:///./src/pages/cpi.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Handle","Slider","CPIPage","props","_this","_Component","call","this","changePeriod","period","setState","getPeriod","state","data","allCpiCsv","edges","map","d","nd","node","DateTime","fromFormat","REF_DATE","toFormat","category","Products_and_product_groups","value","Percent_Change","region","GEO","reduce","periods","_Object$assign","Object","assign","Legend","Canada","Alberta","Number","parseFloat","numPeriods","keys","length","max","Math","abs","Infinity","num","entries","componentDidMount","svg","d3","append","window","addEventListener","componentDidUpdate","bind","componentWillUnmount","removeEventListener","canvassWidth","document","getElementById","offsetWidth","canvassHeight","elementHeight","x","attr","categories","selectAll","newCategories","enter","text","regions","merge","n","newregions","mergedregions","isLegend","select","min","sign","exit","remove","render","_this2","react__WEBPACK_IMPORTED_MODULE_11___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_18__","_components_seo__WEBPACK_IMPORTED_MODULE_19__","title","href","rc_slider__WEBPACK_IMPORTED_MODULE_14__","trackStyle","backgroundColor","railStyle","defaultValue","handle","index","dragging","restProps","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","rc_tooltip__WEBPACK_IMPORTED_MODULE_17__","prefixCls","overlay","visible","placement","key","onChange","id","Component","CPIQuery","__webpack_require__","r","__webpack_exports__","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","react_default","style","marginBottom","margin","maxWidth","padding","fontFamily","fontWeight","gatsby_browser_entry","textDecoration","color","to","Layout","Fragment","component_default","target","position","header","paddingTop","_755544856"],"mappings":"oUAiBMA,EAASC,IAAOD,OAEhBE,cACJ,SAAAA,EAAYC,GAAO,IAAAC,GACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MA0NFC,aAAe,SAACC,GACdL,EAAKM,SAAS,CAACD,OAAQL,EAAKO,UAAUF,MA1NtCL,EAAKQ,MAAQ,GAEb,IAAIC,EAAOT,EAAKD,MAAMU,KAAKC,UAAUC,MAJpB,OAmBjBF,GAZAA,EAAOA,EAAKG,IAAI,SAAAC,GACd,IAAIC,EAAK,GAOT,OANAD,EAAIA,EAAEE,KACND,EAAGT,OAASW,WAASC,WAAWJ,EAAEK,SAAU,WACzCC,SAAS,YACZL,EAAGM,SAAWP,EAAEQ,4BAChBP,EAAGQ,MAAQT,EAAEU,eACbT,EAAGU,OAASX,EAAEY,IACPX,KAIGY,OAAO,SAACC,EAASd,GAAM,IAAAe,EACjCD,EAAQd,EAAER,QAAUwB,OAAOC,OAAO,GAAIH,EAAQd,EAAER,SAChD,IAAIA,EAASsB,EAAQd,EAAER,QAQvB,OAPAA,EAAO0B,OAAS,CACdC,OAAU,SACVC,QAAW,WAEb5B,EAAOQ,EAAEO,UAAYS,OAAOC,SAAPF,EAAA,IAClBf,EAAEW,QAASU,OAAOC,WAAWtB,EAAES,OADbM,GAElBvB,EAAOQ,EAAEO,WACLO,GACN,IAEH3B,EAAKS,KAAOA,EACZT,EAAKoC,WAAaP,OAAOQ,KAAK5B,GAAM6B,OACpCtC,EAAKQ,MAAMH,OAASL,EAAKO,UAAUP,EAAKoC,WAAa,GAGrDpC,EAAKuC,IAAMvC,EAAKD,MAAMU,KAAKC,UAAUC,MAAMe,OAAO,SAACa,EAAK1B,GACtD,OAAO2B,KAAKD,IAAIA,EAAKC,KAAKC,IAAI5B,EAAEE,KAAKQ,mBACnCmB,KAvCa1C,sCA0CnBO,UAAA,SAAUoC,GACR,OAAOd,OAAOe,QAAQzC,KAAKM,MAAMkC,MAGnCE,kBAAA,WAEE1C,KAAK2C,IAAMC,IAAU,QAClBC,OAAO,OAGVC,OAAOC,iBAAiB,SAAU/C,KAAKgD,mBAAmBC,KAAKjD,OAO/DA,KAAKgD,wBAGPE,qBAAA,WACEJ,OAAOK,oBAAoB,SAAUnD,KAAKgD,mBAAmBC,KAAKjD,UAGpEgD,mBAAA,WAEE,IAEII,EAAeC,SAASC,eAAe,OAAOC,YAC9CC,EAFiBC,KAEA/B,OAAOQ,KAAKR,OAAOe,QAAQzC,KAAKK,MAAMH,OAAO,KAAKiC,OAInEuB,EAAId,IAAe,EAAE5C,KAAKoC,IAAM,EAAGpC,KAAKoC,IAAM,GAAI,CAAC,EAAGgB,IAG1DpD,KAAK2C,IACFgB,KAAK,QAASP,GACdO,KAAK,SAAUH,GAGlB,IAAII,EAAa5D,KAAK2C,IACnBkB,UAAU,cACVvD,KAAKoB,OAAOe,QAAQzC,KAAKK,MAAMH,OAAO,KAErC4D,EAAgBF,EACjBG,QACAlB,OAAO,KAEViB,EACGjB,OAAO,QACLc,KAAK,QAAS,iBACdK,KAAK,SAAAtD,GAAC,OAAIA,EAAE,KACZiD,KAAK,MAvBQ,GAwBbA,KAAK,cAAe,UAQzB,IAAIM,GANJL,EAAaA,EACVM,MAAMJ,GACJH,KAAK,QAAS,SAAAjD,GAAC,mBACfiD,KAAK,YAAa,SAACjD,EAAGyD,GAAJ,mBAAuBT,EAAE,GAAzB,KAhCFD,KAgCiCU,EAAqB,IAApD,OAIpBN,UAAU,YACVvD,KAAK,SAAAI,GAAC,OAAIgB,OAAOe,QAAQ/B,EAAE,MAE1B0D,EAAaH,EACdF,QACAlB,OAAO,KACLc,KAAK,QAAS,SAAAjD,GAAC,OAAOA,EAAE,GAAT,YACfiD,KAAK,YAAa,SAACjD,EAAGyD,GAAJ,sBA5CH,GA4C6BA,EAA1B,MAEvBC,EACGvB,OAAO,QACLc,KAAK,IAAK,GACVA,KAAK,SAjDU,IAmDpBS,EACGvB,OAAO,QACLc,KAAK,QAAS,oBACdA,KAAK,qBAAsB,UAC3BA,KAAK,KAAMF,KAEhB,IAAIY,EAAgBJ,EACjBC,MAAME,GAkCT,SAASE,EAAU5D,GACjB,MAAuB,iBAATA,EAAE,GAjClB2D,EACGE,OAAO,QACLZ,KAAK,IAAK,SAAAjD,GACT,OAAI4D,EAAS5D,IACJ,IAEA2B,KAAKmC,IAAI,EAAGd,EAAEhD,EAAE,IAAMgD,EAAE,MAGlCC,KAAK,QAAS,SAAAjD,GACb,OAAI4D,EAAS5D,GAtEC,GAyEL2B,KAAKC,IAAIoB,EAAE,GAAKA,EAAEhD,EAAE,OAGnC2D,EACGE,OAAO,QACLZ,KAAK,cAAe,SAAAjD,GAAC,OAAIA,EAAE,GAAK,EAAI,MAAQ,UAC5CiD,KAAK,KAAM,SAAAjD,GACV,OAAI4D,EAAS5D,GACJ+C,KAEAC,EAAEhD,EAAE,IAAMgD,EAAE,GA/ET,EA+EcrB,KAAKoC,KAAK/D,EAAE,GAAK,KAG5CsD,KAAK,SAAAtD,GAAC,SAAOA,EAAE,KAEpBuD,EAAQS,OAAOC,SACff,EAAWc,OAAOC,YASpBC,OAAA,WAAU,IAAAC,EAAA7E,KAgBR,OAAQ8E,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACNH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,MAAM,QACXL,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,8BACmBF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,wEAAR,sDAEnBN,EAAAC,EAAAC,cAAA,0DAGAF,EAAAC,EAAAC,cAAA,sCAGAF,EAAAC,EAAAC,cAAA,2GAGAF,EAAAC,EAAAC,cAAA,uQAGAF,EAAAC,EAAAC,cAAA,mDAIAF,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,UAAKnE,WAASC,WAAWd,KAAKK,MAAMH,OAAO,GAAI,YAAYc,SAAS,cACpE8D,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEb,IAAK,EACLpC,IAAKpC,KAAKiC,WAAa,EACvBqD,WAAY,CAACC,gBAAiB,aAC9BC,UAAW,CAACD,gBAAiB,aAC7BE,aAAczF,KAAKiC,WAAa,EAChCyD,OA7CW,SAAC9F,GAAU,IAChBuB,EAAyCvB,EAAzCuB,MAAiBwE,GAAwB/F,EAAlCgG,SAAkChG,EAAxB+F,OAAUE,EADXC,IACyBlG,EADzB,8BAExB,OACEkF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEC,UAAU,oBACVC,QAASpB,EAAKzE,UAAUe,GAAO,GAC/B+E,SAAS,EACTC,UAAU,MACVC,IAAKT,GAELb,EAAAC,EAAAC,cAACvF,EAADiC,OAAAC,OAAA,CAAQR,MAAOA,GAAW0E,MAoC5BQ,SAAUrG,KAAKC,eAEjB6E,EAAAC,EAAAC,cAAA,OAAKsB,GAAG,aAxNQC,aAiOP5G,YAER,IAAM6G,EAAQ,8CCtPrBC,EAAAC,EAAAC,GAAAF,EAAA/F,EAAAiG,EAAA,4BAAAC,IAAAH,EAAA/F,EAAAiG,EAAA,uCAAAE,IAAAJ,EAAA/F,EAAAiG,EAAA,gCAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAtC,EAAA4C,GAAAE,EAAAR,EAAA,GAAAS,EAAAT,EAAAtC,EAAA8C,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAtC,EAAAgD,GAAAV,EAAA/F,EAAAiG,EAAA,yBAAAS,EAAArC,IAAA0B,EAAA/F,EAAAiG,EAAA,+BAAAQ,EAAA,aAAAV,EAAA/F,EAAAiG,EAAA,6BAAAQ,EAAA,WAAAV,EAAA/F,EAAAiG,EAAA,yBAAAQ,EAAA,OAAAV,EAAA/F,EAAAiG,EAAA,4BAAAQ,EAAA,UAAAV,EAAA/F,EAAAiG,EAAA,+BAAAQ,EAAA,iBAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAtC,EAAAkD,GAAAZ,EAAA/F,EAAAiG,EAAA,iCAAAW,EAAAvC,IAAA,IAAAwC,EAAAd,EAAA,IAAAA,EAAA/F,EAAAiG,EAAA,8BAAAY,EAAA,IAYA,IAAMV,EAAqBW,IAAMC,cAAc,IAEzCX,EAAc,SAAAlH,GAAK,OACvBoH,EAAAjC,EAAAC,cAAC6B,EAAmBa,SAApB,KACG,SAAAC,GACC,OACE/H,EAAMU,MACLqH,EAAgB/H,EAAMgI,QAAUD,EAAgB/H,EAAMgI,OAAOtH,MAEtDV,EAAMgF,QAAUhF,EAAMiI,UAC5BjI,EAAMU,KAAOV,EAAMU,KAAKA,KAAOqH,EAAgB/H,EAAMgI,OAAOtH,MAGvD0G,EAAAjC,EAAAC,cAAA,uCAaf,SAAS4B,IACP,MAAM,IAAIkB,MACR,gVATJhB,EAAYiB,UAAY,CACtBzH,KAAM0H,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBvD,OAAQoD,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,qMCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOxB,IAAMxC,cAAciE,IAApBvH,OAAAC,OAAA,CACLiH,WACAC,iBACGA,EAAcK,QAIrBR,EAAiBX,UAAY,CAC3Ba,SAAUZ,IAAUmB,MAAM,CACxBH,SAAUhB,IAAUE,OAAOC,aAC1BA,YAGUO,4IChBf,SAASU,EAATT,GAA2D,IAA5CU,EAA4CV,EAA5CU,YAAaC,EAA+BX,EAA/BW,KAAMC,EAAyBZ,EAAzBY,KAAMC,EAAmBb,EAAnBa,SAAUrE,EAASwD,EAATxD,MAChD,OACEsE,EAAA1E,EAAAC,cAAC0E,EAAA,YAAD,CACE9B,MAAO+B,EACP/E,OAAQ,SAAAtE,GACN,IAAMsJ,EACJP,GAAe/I,EAAKuJ,KAAKC,aAAaT,YACxC,OACEI,EAAA1E,EAAAC,cAAC+E,EAAAhF,EAAD,CACEiF,eAAgB,CACdV,QAEFnE,MAAOA,EACP8E,cAAa,QAAU3J,EAAKuJ,KAAKC,aAAa3E,MAC9CoE,KAAM,CACJ,CACEW,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAShF,GAEX,CACEiF,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS7J,EAAKuJ,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAAShF,GAEX,CACE+E,KAAI,sBACJC,QAASP,IAGVU,OACCd,EAASrH,OAAS,EACd,CACE+H,KAAI,WACJC,QAASX,EAASe,KAAT,OAEX,IAELD,OAAOf,MAtDlBjJ,KAAAkK,IA8DJpB,EAAIqB,aAAe,CACjBnB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAIrB,UAAY,CACdsB,YAAarB,IAAUE,OACvBoB,KAAMtB,IAAUE,OAChBqB,KAAMvB,IAAU0C,MAChBlB,SAAUxB,IAAU2C,QAAQ3C,IAAUE,QACtC/C,MAAO6C,IAAUE,OAAOC,YAGXiB,MAEf,IAAMO,EAAY,mZCjFZiB,EAAS,SAAAjC,KAAGkC,UAAH,OACbC,EAAA/F,EAAAC,cAAA,OACE+F,MAAO,CACLC,aAAY,YAGdF,EAAA/F,EAAAC,cAAA,OACE+F,MAAO,CACLE,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGTL,EAAA/F,EAAAC,cAAA,MAAI+F,MAAO,CAAEE,OAAQ,EAAGG,WAAY,QAASC,WAAY,MAAOP,EAAA/F,EAAAC,cAACsG,EAAA,KAAD,CAAMP,MAAO,CAACQ,eAAgB,OAAQC,MAAO,WAAYC,GAAG,KAA5D,WACpDX,EAAA/F,EAAAC,cAAA,QAAM+F,MAAO,CAACS,MAAO,YAArB,OAA2CV,EAAA/F,EAAAC,cAAA,QAAM+F,MAAO,CAACS,MAAO,YAArB,4BAM7DZ,EAAO7C,UAAY,CACjB8C,UAAW7C,IAAUE,QAGvB0C,EAAOH,aAAe,CACpBI,UAAS,IAGID,QCxBTc,UAAS,SAAA/C,GAAA,IAAGd,EAAHc,EAAGd,SAAH,OACbiD,EAAA/F,EAAAC,cAACsG,EAAA,YAAD,CACE1D,MAAK,YASLhD,OAAQ,SAAAtE,GAAI,OACVwK,EAAA/F,EAAAC,cAAA8F,EAAA/F,EAAA4G,SAAA,KACEb,EAAA/F,EAAAC,cAAC4G,EAAA7G,EAAD,CAAkBK,KAAK,6DACrBoG,MAAM,QACNK,OAAO,SACPC,SAAS,SAHX,qBAMAhB,EAAA/F,EAAAC,cAAC+G,EAAD,CAAQlB,UAAWvK,EAAKuJ,KAAKC,aAAa3E,QAC1C2F,EAAA/F,EAAAC,cAAA,OACE+F,MAAO,CACLE,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPa,WAAY,IAGbnE,KA3BTvH,KAAA2L,MAkCFP,EAAO3D,UAAY,CACjBF,SAAUG,IAAUpH,KAAKuH,YAGZuD","file":"component---src-pages-cpi-js-96cf1004b867f00b1509.js","sourcesContent":["import './cpi.css'\r\n\r\nimport React, {Component} from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport * as d3 from 'd3'\r\nimport { DateTime } from 'luxon' \r\n\r\nimport Slider from 'rc-slider'\r\nimport 'rc-slider/assets/index.css'\r\nimport 'rc-tooltip/assets/bootstrap.css'\r\n\r\nimport Tooltip from 'rc-tooltip'\r\n\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\n\r\nconst Handle = Slider.Handle;\r\n\r\nclass CPIPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {};\r\n\r\n    let data = this.props.data.allCpiCsv.edges;\r\n\r\n    // Clean up the data\r\n    data = data.map(d => {\r\n      let nd = {};\r\n      d = d.node;\r\n      nd.period = DateTime.fromFormat(d.REF_DATE, 'MMMyyyy')\r\n        .toFormat('yyyy-MMM');\r\n      nd.category = d.Products_and_product_groups;\r\n      nd.value = d.Percent_Change;\r\n      nd.region = d.GEO;\r\n      return nd;\r\n    });\r\n\r\n    // Group by period\r\n    data = data.reduce((periods, d) => {\r\n      periods[d.period] = Object.assign({}, periods[d.period]);\r\n      let period = periods[d.period];\r\n      period.Legend = {\r\n        'Canada': 'Canada',\r\n        'Alberta': 'Alberta'\r\n      };\r\n      period[d.category] = Object.assign({\r\n        [d.region]: Number.parseFloat(d.value)\r\n      }, period[d.category]);\r\n      return periods;\r\n    }, {});\r\n\r\n    this.data = data;\r\n    this.numPeriods = Object.keys(data).length;\r\n    this.state.period = this.getPeriod(this.numPeriods - 1);\r\n\r\n    // Get the largest absolute value from the domain\r\n    this.max = this.props.data.allCpiCsv.edges.reduce((max, d) => {\r\n      return Math.max(max, Math.abs(d.node.Percent_Change))\r\n    }, -Infinity);\r\n  }\r\n\r\n  getPeriod(num) {\r\n    return Object.entries(this.data)[num];\r\n  }\r\n\r\n  componentDidMount () {\r\n    // Set up our canvas\r\n    this.svg = d3.select('#cpi')\r\n      .append('svg');\r\n\r\n    // Listen for window resize\r\n    window.addEventListener(\"resize\", this.componentDidUpdate.bind(this));\r\n\r\n    // Update once\r\n    // let ctx = this;\r\n    // setTimeout(() => {\r\n    //   ctx.componentDidUpdate();\r\n    // }, 500);\r\n    this.componentDidUpdate();\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    window.removeEventListener(\"resize\", this.componentDidUpdate.bind(this));\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    // Set up some variables\r\n    let elementHeight = 17;\r\n    let categoryHeight = elementHeight * 3.5;\r\n    let canvassWidth = document.getElementById('cpi').offsetWidth;\r\n    let canvassHeight = (Object.keys(Object.entries(this.state.period[1])).length) * categoryHeight;\r\n    let textPadding = 3;\r\n\r\n    // Set up our horizontal scale\r\n    let x = d3.scaleLinear([-this.max - 2, this.max + 2], [0, canvassWidth]);\r\n\r\n    // Resize if necessary\r\n    this.svg\r\n      .attr(\"width\", canvassWidth)\r\n      .attr(\"height\", canvassHeight);\r\n\r\n    // Add a group for each category\r\n    let categories = this.svg\r\n      .selectAll('g.category')\r\n      .data(Object.entries(this.state.period[1]));\r\n\r\n    let newCategories = categories\r\n      .enter()\r\n      .append('g');\r\n\r\n    newCategories\r\n      .append('text')\r\n        .attr('class', 'categoryLabel')\r\n        .text(d => d[0])\r\n        .attr('dy', -textPadding)\r\n        .attr('text-anchor', 'middle');\r\n\r\n    categories = categories\r\n      .merge(newCategories)\r\n        .attr('class', d => `category`)\r\n        .attr('transform', (d, n) => `translate(${x(0)},${n * categoryHeight + 20})`);\r\n\r\n    // Add a group for each region\r\n    let regions = categories\r\n      .selectAll('g.region')\r\n      .data(d => Object.entries(d[1]));\r\n\r\n    let newregions = regions\r\n      .enter()\r\n      .append('g')\r\n        .attr('class', d => `${d[0]} region`)\r\n        .attr('transform', (d, n) => `translate(0, ${n*elementHeight})`);\r\n\r\n    newregions\r\n      .append('rect')\r\n        .attr('y', 0)\r\n        .attr('height', elementHeight);\r\n\r\n    newregions\r\n      .append('text')\r\n        .attr('class', 'regionValueLabel')\r\n        .attr('alignment-baseline', 'middle')\r\n        .attr('dy', elementHeight / 2);\r\n    \r\n    let mergedregions = regions\r\n      .merge(newregions);\r\n      \r\n    mergedregions\r\n      .select('rect')\r\n        .attr('x', d => {\r\n          if (isLegend(d)) {\r\n            return -elementHeight/2;\r\n          } else {\r\n            return Math.min(0, x(d[1]) - x(0))\r\n          }\r\n        })\r\n        .attr('width', d => {\r\n          if (isLegend(d)){\r\n            return elementHeight;\r\n          } else {\r\n            return Math.abs(x(0) - x(d[1]))}\r\n        });\r\n\r\n    mergedregions\r\n      .select('text')\r\n        .attr('text-anchor', d => d[1] < 0 ? 'end' : 'start')\r\n        .attr('dx', d => {\r\n          if (isLegend(d)) {\r\n            return elementHeight/2 + textPadding;\r\n          } else {\r\n            return x(d[1]) - x(0) + Math.sign(d[1] - 0) * textPadding;\r\n          }\r\n        })\r\n        .text(d => `${d[1]}`);\r\n\r\n    regions.exit().remove();\r\n    categories.exit().remove();\r\n\r\n\r\n    function isLegend (d) {\r\n      return typeof d[1] === 'string';\r\n    }\r\n\r\n  }\r\n\r\n  render () {\r\n    const handle = (props) => {\r\n      const { value, dragging, index, ...restProps } = props;\r\n      return (\r\n        <Tooltip\r\n          prefixCls=\"rc-slider-tooltip\"\r\n          overlay={this.getPeriod(value)[0]}\r\n          visible={true}\r\n          placement=\"top\"\r\n          key={index}\r\n        >\r\n          <Handle value={value} {...restProps} />\r\n        </Tooltip>\r\n      );\r\n    };\r\n\r\n    return (<Layout>\r\n      <SEO title=\"CPI\" />\r\n      <ul>\r\n      <li>\r\n        Adapted from the <a href=\"https://open.alberta.ca/dataset/443b43de-b8c0-4108-9aab-bde7df7532ed\">Alberta Official Statistics Consumer Price Index.</a>\r\n      </li>\r\n      <li>\r\n        Automatically updates with a single command.\r\n      </li>\r\n      <li>\r\n        Fully mobile accessible.\r\n      </li>\r\n      <li>\r\n      Groups category labels and bars together to reduce the eye movement required to connect them.\r\n      </li>\r\n      <li>\r\n      This visualization does not consider the weight of each CPI component. As such, a similar per cent change in two CPI components could have very different impacts on overall CPI. It may be worth exploring designs that visualize this more effectively.\r\n      </li>\r\n      <li>\r\n      Use the slider to change the period.\r\n      </li>\r\n      </ul>\r\n      <h2>Consumer Price Index, Year-Over-Year Percentage Change</h2>\r\n      <h3>{DateTime.fromFormat(this.state.period[0], 'yyyy-MMM').toFormat('MMMM yyyy')}</h3>\r\n      <Slider\r\n        min={0}\r\n        max={this.numPeriods - 1}\r\n        trackStyle={{backgroundColor: 'lightgrey'}}\r\n        railStyle={{backgroundColor: 'lightgrey'}}\r\n        defaultValue={this.numPeriods - 1}\r\n        handle={handle}\r\n        onChange={this.changePeriod}\r\n      />\r\n      <div id=\"cpi\"></div>\r\n    </Layout>);\r\n  }\r\n\r\n  changePeriod = (period) => {\r\n    this.setState({period: this.getPeriod(period)});\r\n  }\r\n}\r\n\r\nexport default CPIPage\r\n\r\nexport const CPIQuery = graphql`\r\n  query {\r\n    allCpiCsv {\r\n      edges {\r\n        node {\r\n          REF_DATE,\r\n          GEO,\r\n          Products_and_product_groups,\r\n          VALUE,\r\n          Percent_Change\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <div\r\n    style={{\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0, fontFamily: 'Arial', fontWeight: 100 }}><Link style={{textDecoration: 'none', color: 'inherit'}} to=\"/\">\r\n          Alberta <span style={{color: '#ff7900'}}>un-</span><span style={{color: '#00aad2'}}>Official Statistics</span></Link>\r\n      </h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport GitHubForkRibbon from 'react-github-fork-ribbon'\r\n\r\nimport Header from './header'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <GitHubForkRibbon href=\"//www.github.com/jczerwinski/alberta-unofficial-statistics\"\r\n          color=\"black\"\r\n          target=\"_blank\"\r\n          position=\"right\">\r\n          Fork me on GitHub\r\n        </GitHubForkRibbon>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          {children}\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}